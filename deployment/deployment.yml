name: Deployment Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  speak:
    runs-on: ubuntu-latest

    steps:
      - name: Echo a short message
        run: echo "Data > Cloud."
  
  test:
    runs-on: ubuntu-latest

    env:
      DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }} 
      DATABASE_NAME: ${{ secrets.DATABASE_NAME }} 
      DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }} 
      DATABASE_IP: ${{ secrets.DATABASE_IP }} 
      DATABASE_PORT: ${{ secrets.DATABASE_PORT }} 
      BOOTSTRAP_SERVERS: ${{ secrets.BOOTSTRAP_SERVERS }}
      GROUP_ID: ${{ secrets.GROUP_ID }}
      PASSWORD: ${{ secrets.PASSWORD }}
      SASL_MECHANISM: ${{ secrets.SASL_MECHANISM }}
      SECURITY_PROTOCOL: ${{ secrets.SECURITY_PROTOCOL }}
      USERNAME: ${{ secrets.USERNAME }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      
      
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run pytest
        run: pytest
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pylint

      - name: Run pylint
        run: |
          pylint **/*.py --fail-under=8

  deploy:
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Deploy to Staging server
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          ARGS: "-rlgoDzvc -i"
          SOURCE: ${{ secrets.SOURCE }}
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: ${{ secrets.REMOTE_TARGET }}
          EXCLUDE: "/dist/, /node_modules/"
          SCRIPT_BEFORE: |
            whoami
            ls -al
          SCRIPT_AFTER: |
            whoami
            ls -al
            echo $RSYNC_STDOUT
